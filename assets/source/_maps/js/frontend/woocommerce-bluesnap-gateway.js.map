{"version":3,"names":[],"mappings":"","sources":["frontend/woocommerce-bluesnap-gateway.js"],"sourcesContent":["(function( $ ) {\n\t'use strict';\n\n\tvar card_thumbs = {\n\t\t'AMEX': woocommerce_bluesnap_gateway_general_params.images_url + 'amex.png',\n\t\t'DINERS': woocommerce_bluesnap_gateway_general_params.images_url + 'diners.png',\n\t\t'DISCOVER': woocommerce_bluesnap_gateway_general_params.images_url + 'discover.png',\n\t\t'JCB': woocommerce_bluesnap_gateway_general_params.images_url + 'jcb.png',\n\t\t'MaestroUK': woocommerce_bluesnap_gateway_general_params.images_url + 'maestro.png',\n\t\t'MASTERCARD': woocommerce_bluesnap_gateway_general_params.images_url + 'mastercard.png',\n\t\t'VISA': woocommerce_bluesnap_gateway_general_params.images_url + 'visa.png',\n\t\t'Solo': woocommerce_bluesnap_gateway_general_params.images_url + 'solo.png',\n\t\t'CarteBleue': woocommerce_bluesnap_gateway_general_params.images_url + 'cb.png',\n\t\t'generic' : woocommerce_bluesnap_gateway_general_params.generic_card_url\n\t};\n\n\t// Holds all validation messages from Bluesnap.\n\tvar validation_messages = {};\n\n\tvar reset_token_fn = debounce(function(){\n\n\t\t// Block early, before the ajax call that resets the token, but not before the debounce routine in submit_error_efficient() runs.\n\t\tif ( ! wc_bluesnap_form.is_checkout && wc_bluesnap_form.is_bluesnap_selected() ) {\n\t\t\tsetTimeout( function () {\n\t\t\t\twc_bluesnap_form.block_form();\n\t\t\t}, 150);\n\t\t}\n\n\t\t$.ajax(\n\t\t\t{\n\t\t\t\turl: getAjaxUrl('reset_hpf'),\n\t\t\t\tmethod: \"POST\",\n\t\t\t}\n\t\t).done(function( res ){\n\t\t\twoocommerce_bluesnap_gateway_general_params.token = res;\n\t\t}\n\t\t).always(function(){\n\t\t\twc_bluesnap_form.credentials_requested = false;\n\t\t\t$( document.body ).trigger( 'update_checkout' );\n\n\t\t\tif ( ! wc_bluesnap_form.is_checkout && wc_bluesnap_form.is_bluesnap_selected() ) {\n\t\t\t\twc_bluesnap_form.init_bluesnap();\n\t\t\t}\n\t\t});\n\t}, 100);\n\n\tvar bsObj = {\n\t\tonFieldEventHandler: {\n\t\t\tsetupComplete: function () {\n\t\t\t\twc_bluesnap_form.unblock_form();\n\t\t\t},\n\t\t\tonFocus: function(tagId) {\n\t\t\t\t$( \"[data-bluesnap='\" + tagId + \"']\" ).removeClass('input-div-error input-div-valid');\n\t\t\t},\n\t\t\tonBlur: function(tagId) {\n\t\t\t},\n\t\t\tonError: function(tagId, errorCode, errorDescription) {\n\t\t\t\tvar expiredToken = [ '400', '14040', '14041', '14042' ];\n\t\n\t\t\t\t$( \"[data-bluesnap='\" + tagId + \"']\" ).addClass('input-div-error').removeClass('input-div-valid');\n\n\t\t\t\tvar isObject = ( 'object' === typeof( woocommerce_bluesnap_gateway_general_params.errors[errorCode] ) ),\n\t\t\t\t\tkey = isObject ? errorCode + tagId : errorCode;\n\t\t\t\tvalidation_messages[ key ] = {\n\t\t\t\t\ttagId: tagId,\n\t\t\t\t\tmessage: isObject ? woocommerce_bluesnap_gateway_general_params.errors[errorCode][tagId] : woocommerce_bluesnap_gateway_general_params.errors[errorCode]\n\t\t\t\t};\n\n\t\t\t\tif ( -1 < expiredToken.indexOf( errorCode ) ) {\n\t\t\t\t\treset_token_fn();\n\t\t\t\t}\n\n\t\t\t\tsubmit_error_efficient();\n\t\t\t},\n\t\t\tonType: function(tagId, cardType) {\n\t\t\t\tvar card_url = card_thumbs[cardType];\n\t\t\t\t$( \"#card-logo > img\" ).attr( \"src\", (card_url) ? card_url : card_thumbs['generic'] );\n\t\t\t},\n\t\t\tonValid: function(tagId) {\n\t\t\t\t$( \"[data-bluesnap='\" + tagId + \"']\" ).removeClass('input-div-error').addClass('input-div-valid');\n\t\t\t\twc_bluesnap_form.get_form().find( '.woocommerce-NoticeGroup-checkout[data-bluesnap-tag=\"' + tagId + '\"]' ).remove();\n\t\t\t\t$.each(validation_messages, function(errorCode, data) {\n\t\t\t\t\tif(data.tagId === tagId) {\n\t\t\t\t\t\tdelete validation_messages[errorCode];\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t},\n\t\tstyle: {\n\t\t\t\".invalid\": {\n\t\t\t\t\"color\": \"red\"\n\t\t\t},\n\t\t\t\":focus\": {\n\t\t\t\t\"color\": \"inherit\"\n\t\t\t}\n\t\t},\n\t\tccnPlaceHolder: \"•••• •••• •••• ••••\",\n\t\tcvvPlaceHolder: \"CVC\",\n\t\texpDropDownSelector: false,\n\t\t'3DS': is_3d_secure()\n\t};\n\n\tif ( 'undefined' !== typeof( bluesnapStyleOverrides ) ) {\n\t\tbsObj.style = bluesnapStyleOverrides;\n\t}\n\n\t// On Checkout form.\n\t$( document.body ).on(\n\t\t'updated_checkout', function(e, data) {\n\t\t\tvar varKey = '#bluesnap_relocalized_cart_data';\n\n\t\t\twc_bluesnap_form.on_bluesnap_selected( 'updated_checkout' );\n\n\t\t\t// Update order total in our localized var.\n\t\t\tif ( 'object' === typeof( data ) && data.fragments && data.fragments[varKey] && woocommerce_bluesnap_gateway_general_params ) {\n\n\t\t\t\tvar cart_data = JSON.parse( data.fragments[varKey] );\n\n\t\t\t\twoocommerce_bluesnap_gateway_general_params.total_amount = cart_data['total'];\n\t\t\t\twoocommerce_bluesnap_gateway_general_params.currency     = cart_data['currency'];\n\t\t\t}\n\t\t}\n\t);\n\n\t// On Checkout form error, reset the type so next time updated_checkout is called will re-initialize BS SDK\n\t$( document.body ).on(\n\t\t'checkout_error', function(e, data) {\n\t\t\twc_bluesnap_form.credentials_requested_type = '';\n\t\t}\n\t);\n\n\t// On Add Payment Method form.\n\t$( 'form#add_payment_method' ).on(\n\t\t'click payment_methods', function() {\n\t\t\tif (wc_bluesnap_form.is_bluesnap_selected()) {\n\t\t\t\twc_bluesnap_form.init_bluesnap();\n\t\t\t}\n\t\t}\n\t);\n\n\t// On Pay for order form.\n\t$('form#order_review input[type=radio][name=wc-bluesnap-payment-token]').change(function() {\n\t\tif (wc_bluesnap_form.is_bluesnap_selected()) {\n\t\t\twc_bluesnap_form.init_bluesnap('order_review');\n\t\t}\n\t} );\n\n\tfunction debounce(func, wait, immediate) {\n\t\tvar timeout;\n\t\treturn function() {\n\t\t\tvar context = this, args = arguments;\n\t\t\tvar later = function() {\n\t\t\t\ttimeout = null;\n\t\t\t\tif (!immediate) func.apply(context, args);\n\t\t\t};\n\t\t\tvar callNow = immediate && !timeout;\n\t\t\tclearTimeout(timeout);\n\t\t\ttimeout = setTimeout(later, wait);\n\t\t\tif (callNow) func.apply(context, args);\n\t\t};\n\t};\n\n\tfunction getAjaxUrl(method) {\n\t\treturn woocommerce_bluesnap_gateway_general_params.wc_ajax_url.toString().replace( '%%endpoint%%', 'bluesnap_' + method )\n\t}\n\n\tfunction clear_errors() {\n\t\tvar errors = wc_bluesnap_form.get_form().find( '.woocommerce-NoticeGroup-checkout, .woocommerce-error, .woocommerce-message' );\n\t\terrors = errors.add( wc_bluesnap_form.get_form().closest('.woocommerce').find( '.woocommerce-NoticeGroup-checkout, .woocommerce-error, .woocommerce-message' ) );\n\t\tvar code = {};\n\t\terrors.filter(\"[data-bluesnap-error]\").each(function(){\n\t\t\tcode[$(this).data('bluesnap-error')] = true;\n\t\t})\n\t\terrors.remove();\n\t\treturn code;\n\t}\n\n\tfunction submit_error() {\n\t\tvar codes = clear_errors();\n\t\tvar scroll = false;\n\t\t$.each(\n\t\t\tvalidation_messages, function(errorCode, data) {\n\t\t\t\tif( typeof codes[errorCode] === \"undefined\" ) {\n\t\t\t\t\tscroll = true;\n\t\t\t\t}\n\t\t\t\twc_bluesnap_form.get_form().prepend( '<div class=\"woocommerce-NoticeGroup woocommerce-NoticeGroup-checkout\" data-bluesnap-error=\"' + errorCode + '\" data-bluesnap-tag=\"' + data.tagId + '\"><div class=\"woocommerce-error\">' + data.message + '</div></div>' );\n\t\t\t}\n\t\t);\n\t\twc_bluesnap_form.get_form().removeClass( 'processing' ).unblock();\n\t\twc_bluesnap_form.get_form().find( '.input-text, select, input:checkbox' ).trigger( 'validate' ).blur();\n\t\tif( scroll ) {\n\t\t\tscroll_to_notices();\n\t\t}\n\t\t$( document.body ).trigger( 'checkout_error' );\n\t}\n\n\tvar submit_error_efficient = debounce(submit_error, 100);\n\n\tfunction scroll_to_notices() {\n\t\tvar scroll_element = $( '.woocommerce-NoticeGroup-updateOrderReview, .woocommerce-NoticeGroup-checkout' );\n\t\tif ( ! scroll_element.length ) {\n\t\t\tscroll_element = $( '.form.checkout' );\n\t\t}\n\t\t$.scroll_to_notices( scroll_element );\n\t}\n\n\t/**\n\t * Object to handle bluesnap wc forms.\n\t */\n\tvar wc_bluesnap_form = {\n\t\tinput_card_info_id : '#bluesnap_card_info',\n\t\tinput_3ds_ref_id : '#bluesnap_3ds_reference_id',\n\t\t$checkout_form: $( 'form.woocommerce-checkout' ),\n\t\t$add_payment_form: $( 'form#add_payment_method' ),\n\t\t$order_review_form: $( 'form#order_review' ),\n\t\tcredentials_requested: false,\n\t\tcredentials_requested_type: '',\n\t\tis_checkout: false,\n\t\tis_order_review_form: false,\n\t\tform: null,\n\t\tsubmitted: false,\n\t\tforce_submit: false,\n\t\t/**\n\t\t * Interrupts normal checkout flow. Delay submission.\n\t\t */\n\t\tinit: function() {\n\t\t\t// Checkout Page\n\t\t\tif ( this.$checkout_form.length ) {\n\t\t\t\tthis.form        = this.$checkout_form;\n\t\t\t\tthis.is_checkout = true;\n\t\t\t\tthis.form.on( 'checkout_place_order', this.submit_credentials );\n\t\t\t}\n\n\t\t\t// Add payment Page\n\t\t\tif ( this.$add_payment_form.length ) {\n\t\t\t\tthis.form                  = this.$add_payment_form;\n\t\t\t\tthis.is_add_payment_method = true;\n\t\t\t\tthis.form.on( 'add_payment_method', this.submit_credentials );\n\t\t\t\tthis.$add_payment_form.on( 'submit', this.add_payment_method_trigger );\n\t\t\t}\n\n\t\t\t// Pay for order Page (change subs method)\n\t\t\tif ( this.$order_review_form.length ) {\n\t\t\t\tthis.form                 = this.$order_review_form;\n\t\t\t\tthis.is_order_review_form = true;\n\t\t\t\tthis.form.on( 'add_payment_method', this.submit_credentials );\n\t\t\t\tthis.$order_review_form.on( 'submit', this.add_payment_method_trigger );\n\t\t\t\tif (wc_bluesnap_form.is_bluesnap_selected()) {\n\t\t\t\t\twc_bluesnap_form.init_bluesnap();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// For returning shoppers\n\t\t\tif ( $( 'input[name=\"wc-bluesnap-payment-token\"]:radio' ).length > 1 ) {\n\t\t\t\tthis.$checkout_form.on( 'click', function(e) {\n\t\t\t\t\tvar $target = $( e.target );\n\t\t\t\t\tif ( ! $target.is( 'input[name=\"wc-bluesnap-payment-token\"]:radio' ) ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tjQuery( document.body ).trigger( 'update_checkout' );\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t// tokenization script initiation for change payment method page and pay for order page.\n\t\t\tif (this.is_add_payment_method || this.is_order_review_form) {\n\t\t\t\t$( document.body ).trigger( 'wc-credit-card-form-init' );\n\t\t\t}\n\n\t\t\t$('body').on('click', function(e) {\n\n\t\t\t\tvar $target = $( e.target );\n\n\t\t\t\tif( $target.parents().addBack().filter('.bluesnap-cvc-tooltip-trigger').length ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar $tooltips = $('.bluesnap-cvc-tooltip'),\n\t\t\t\t\t$thisParents = $target.parents( $tooltips );\n\n\t\t\t\t$tooltips.not( $thisParents ).removeClass('bs-tooltip-visible');\n\t\t\t});\n\n\t\t\tif ( $( 'form#order_review' ).length ) {\n\t\t\t\t// Run on init to handle BS selected as default.\n\t\t\t\twc_bluesnap_form.on_bluesnap_selected();\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Checks if input bluesnap is checked.\n\t\t * @returns bool\n\t\t */\n\t\tis_bluesnap_selected: function() {\n\t\t\treturn $( '#payment_method_bluesnap' ).is( ':checked' );\n\t\t},\n\n\t\tis_bluesnap_ach_selected: function() {\n\t\t\treturn $( '#payment_method_bluesnap_ach' ).is( ':checked' );\n\t\t},\n\n\t\tis_bluesnap_saved_token_selected: function() {\n\t\t\treturn ( $( '#payment_method_bluesnap' ).is( ':checked' ) && ( $( 'input[name=\"wc-bluesnap-payment-token\"]' ).is( ':checked' ) && 'new' !== $( 'input[name=\"wc-bluesnap-payment-token\"]:checked' ).val() ) );\n\t\t},\n\t\t/**\n\t\t * Trigger BlueSnap authentication.\n\t\t * @param event\n\t\t */\n\t\tinit_bluesnap: function( event ) {\n\n\t\t\t// Only add attribute first time we show the form\n\t\t\tif (is_3d_secure() && ! wc_bluesnap_form.is_bluesnap_saved_token_selected() && 'submitButton' !== $( \"[name='woocommerce_checkout_place_order']\" ).attr( 'data-bluesnap' ) ) {\n\t\t\t\t$( \"[name='woocommerce_checkout_place_order']\" ).attr( 'data-bluesnap', 'submitButton' );\n\t\t\t}\n\n\t\t\tif ( ! this.credentials_requested || 'updated_checkout' === event || 'order_review' === event ) {\n\n\t\t\t\tthis.credentials_requested = true;\n\n\t\t\t\tbsObj[\"token\"] = woocommerce_bluesnap_gateway_general_params.token;\n\t\t\t\tif ( ( 'updated_checkout' === event || 'hpf' !== this.credentials_requested_type ) && ! wc_bluesnap_form.is_bluesnap_saved_token_selected() ) {\n\t\t\t\t\tthis.credentials_requested_type = 'hpf';\n\t\t\t\t\tbluesnap.hostedPaymentFieldsCreate( bsObj );\n\t\t\t\t}\n\n\t\t\t\tif ( 'savedToken' !== this.credentials_requested_type && wc_bluesnap_form.is_bluesnap_saved_token_selected() ) {\n\t\t\t\t\tif ( is_3d_secure() ) {\n\t\t\t\t\t\tthis.credentials_requested_type = 'savedToken';\n\t\t\t\t\t\tbluesnap.threeDsPaymentsSetup( woocommerce_bluesnap_gateway_general_params.token, function( res ) {\n\t\t\t\t\t\t\tif ( res.code == 1 && res.cardData && res.threeDSecure && res.threeDSecure.threeDSecureReferenceId ) {\n\t\t\t\t\t\t\t\tvar threeDSecure = res.threeDSecure;\n\t\t\t\t\t\t\t\twc_bluesnap_form.success_callback( res.cardData, res.threeDSecure.threeDSecureReferenceId );\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tbsObj.onFieldEventHandler.onError.apply(bsObj.onFieldEventHandler, ['', res.code, res.info.errors[0]]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$('.bluesnap-cvc-tooltip-trigger').not('.bs-tooltip-initalized').on('click', function(e){\n\t\t\t\te.preventDefault();\n\t\t\t\t$(this).next('.bluesnap-cvc-tooltip').toggleClass('bs-tooltip-visible');\n\t\t\t});\n\t\t},\n\t\t/**\n\t\t * Triggered when BlueSnap is selected from the payment list.\n\t\t */\n\t\ton_bluesnap_selected: function( event ) {\n\n\t\t\tif (wc_bluesnap_form.is_bluesnap_selected() ) {\n\t\t\t\tif ( wc_bluesnap_form.is_bluesnap_saved_token_selected() ) {\n\t\t\t\t\t$( \"[name='woocommerce_checkout_place_order']\" ).removeAttr( 'data-bluesnap' );\n\t\t\t\t}\n\n\t\t\t\tevent = 'undefined' !== typeof( event ) && 'undefined' !== typeof( event.type ) && 'change' === event.type ? 'updated_checkout' : event;\n\t\t\t\twc_bluesnap_form.init_bluesnap( event );\n\t\t\t} else {\n\t\t\t\t// Init on PM method change - if BS selected.\n\t\t\t\t$( \"[name='payment_method']\" ).off( 'change', wc_bluesnap_form.on_bluesnap_selected).on( 'change', wc_bluesnap_form.on_bluesnap_selected);\n\n\t\t\t\t$( \"[name='woocommerce_checkout_place_order']\" ).removeAttr( 'data-bluesnap' );\n\t\t\t}\n\t\t},\n\n\t\tsecure_3d_field: function(id) {\n\t\t\tvar field = $( '#' + id );\n\t\t\tif( field.length && $.trim( field.val() ).length ) {\n\t\t\t\treturn field.val();\n\t\t\t} else if (typeof woocommerce_bluesnap_gateway_general_params[id] !== 'undefined' ) {\n\t\t\t\treturn woocommerce_bluesnap_gateway_general_params[id];\n\t\t\t} else {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * 3D Secure Object with transaction data.\n\t\t */\n\t\tsecure_3d_object: function() {\n\t\t\tvar threeDSecureObj = {};\n\t\t\tif (is_3d_secure()) {\n\t\t\t\tthreeDSecureObj = {\n\t\t\t\t\t'amount' : parseFloat( woocommerce_bluesnap_gateway_general_params.total_amount ),\n\t\t\t\t\t'currency' : woocommerce_bluesnap_gateway_general_params.currency,\n\t\t\t\t\t'billingFirstName' : wc_bluesnap_form.secure_3d_field( 'billing_first_name' ),\n\t\t\t\t\t'billingLastName' : wc_bluesnap_form.secure_3d_field( 'billing_last_name' ),\n\t\t\t\t\t'billingCountry' : wc_bluesnap_form.secure_3d_field( 'billing_country' ),\n\t\t\t\t\t'billingState' : '',\n\t\t\t\t\t'billingCity' : wc_bluesnap_form.secure_3d_field( 'billing_city' ),\n\t\t\t\t\t'billingAddress' : $.trim( wc_bluesnap_form.secure_3d_field( 'billing_address_1' ) + ' ' + wc_bluesnap_form.secure_3d_field( 'billing_address_2' ) ),\n\t\t\t\t\t'billingZip' : wc_bluesnap_form.secure_3d_field( 'billing_postcode' ),\n\t\t\t\t\t'email' : wc_bluesnap_form.secure_3d_field( 'billing_email' ),\n\t\t\t\t};\n\n\t\t\t\tswitch( threeDSecureObj.billingCountry ) {\n\t\t\t\t\tcase 'US':\n\t\t\t\t\tcase 'CA':\n\t\t\t\t\t\tthreeDSecureObj.billingState = wc_bluesnap_form.secure_3d_field( 'billing_state' );\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn threeDSecureObj;\n\t\t},\n\t\t/**\n\t\t * Submitting Credentials to BlueSnap.\n\t\t * @returns {boolean}\n\t\t */\n\t\tsubmit_credentials: function(e) {\n\n\t\t\tif( wc_bluesnap_form.force_submit ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\te.preventDefault();\n\n\t\t\tif ( wc_bluesnap_form.is_bluesnap_ach_selected() && ( wc_bluesnap_form.is_add_payment_method || wc_bluesnap_form.is_order_review_form ) ) {\n\t\t\t\twc_bluesnap_form.submit_form();\n\t\t\t}\n\n\t\t\tif ( ! wc_bluesnap_form.is_bluesnap_selected() ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\twc_bluesnap_form.block_form();\n\t\t\tclear_errors();\n\n\t\t\tif ( ! wc_bluesnap_form.is_bluesnap_saved_token_selected() ) {\n\n\t\t\t\tbluesnap.hostedPaymentFieldsSubmitData(\n\t\t\t\t\tfunction(res) {\n\t\t\t\t\t\tif ( res.cardData && ( ! is_3d_secure() || ( res.threeDSecure && res.threeDSecure.threeDSecureReferenceId ) ) ) {\n\t\t\t\t\t\t\tvar threeDSecureReferenceId = '';\n\t\t\t\t\t\t\tif ( is_3d_secure() ) {\n\t\t\t\t\t\t\t\tthreeDSecureReferenceId = res.threeDSecure.threeDSecureReferenceId;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\twc_bluesnap_form.success_callback( res.cardData, threeDSecureReferenceId );\n\t\t\t\t\t\t} else if( res.error ) {\n\t\t\t\t\t\t\tvar errorArray = res.error;\n\t\t\t\t\t\t\tfor (var i in errorArray) {\n\t\t\t\t\t\t\t\tbsObj.onFieldEventHandler.onError.apply(bsObj.onFieldEventHandler, [errorArray[i].tagId, errorArray[i].errorCode, errorArray[i].errorDescription])\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\twc_bluesnap_form.error_callback();\n\t\t\t\t\t\t}\n\t\t\t\t\t}, wc_bluesnap_form.secure_3d_object()\n\t\t\t\t);\n\n\t\t\t} else {\n\n\t\t\t\tif ( woocommerce_bluesnap_gateway_general_params.stokens ) {\n\n\t\t\t\t\tvar selectedToken = $('input[name=\"wc-bluesnap-payment-token\"]:radio:checked').val();\n\t\t\t\t\tif ( ! selectedToken ) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar selectedCard = woocommerce_bluesnap_gateway_general_params.stokens[ selectedToken ];\n\t\t\t\t\tif ( ! selectedCard ) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! is_3d_secure() ) {\n\t\t\t\t\t\tif ( wc_bluesnap_form.is_order_review_form ) {\n\t\t\t\t\t\t\twc_bluesnap_form.submit_form();\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar previouslyUsedCard = {\n\t\t\t\t\t\t'last4Digits': selectedCard.last4,\n\t\t\t\t\t\t'ccType': selectedCard.type,\n\t\t\t\t\t\t'amount': parseFloat( woocommerce_bluesnap_gateway_general_params.total_amount ),\n\t\t\t\t\t\t'currency': woocommerce_bluesnap_gateway_general_params.currency\n\t\t\t\t\t};\n\t\t\t\t\tbluesnap.threeDsPaymentsSubmitData(previouslyUsedCard);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvalidation_messages = {};\n\t\t\treturn false;\n\t\t},\n\t\tadd_payment_method_trigger: function() {\n\t\t\tif( wc_bluesnap_form.force_submit || ( ! wc_bluesnap_form.is_bluesnap_selected() && ! wc_bluesnap_form.is_bluesnap_ach_selected() ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\twc_bluesnap_form.form.trigger( 'add_payment_method' );\n\t\t\treturn false;\n\t\t},\n\t\t/**\n\t\t * Callback on Success to set credentials into checkout form.\n\t\t * @param data\n\t\t */\n\t\tsuccess_callback : function( data, threeDSecureReferenceId ) {\n\t\t\t$( this.input_card_info_id ).val( JSON.stringify( data ) );\n\t\t\tif ( ! threeDSecureReferenceId ) {\n\t\t\t\tthreeDSecureReferenceId = '';\n\t\t\t}\n\t\t\t$( this.input_3ds_ref_id ).val( threeDSecureReferenceId );\n\t\t\twc_bluesnap_form.submit_form();\n\t\t},\n\t\t/**\n\t\t * Callback on Failure.\n\t\t * Submit formal as normal and reset it.\n\t\t */\n\t\terror_callback: function() {\n\t\t\twc_bluesnap_form.submit_form();\n\t\t\twc_bluesnap_form.unblock_form();\n\t\t},\n\t\t/**\n\t\t * Deactivate submit_credentials function event and submit the form again.\n\t\t */\n\t\tsubmit_form: function() {\n\t\t\twc_bluesnap_form.force_submit = true;\n\t\t\twc_bluesnap_form.form.submit();\n\t\t\twc_bluesnap_form.force_submit = false;\n\t\t},\n\t\tblock_form: function() {\n\t\t\twc_bluesnap_form.form.block( {\n\t\t\t\tmessage: null,\n\t\t\t\toverlayCSS: {\n\t\t\t\t\tbackground: '#fff',\n\t\t\t\t\topacity: 0.6\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\t\tunblock_form: function() {\n\t\t\twc_bluesnap_form.form.unblock();\n\t\t},\n\t\t/**\n\t\t * Form Element getter.\n\t\t * @returns {*|HTMLElement}\n\t\t */\n\t\tget_form: function() {\n\t\t\treturn this.form;\n\t\t}\n\t};\n\n\t$(\n\t\tfunction() {\n\t\t\t\twc_bluesnap_form.init();\n\t\t}\n\t);\n\n\t/**\n\t * @returns {boolean}\n\t */\n\tfunction is_3d_secure() {\n\t\treturn ! ! + woocommerce_bluesnap_gateway_general_params._3d_secure;\n\t}\n\n\t/**\n\t * @returns {boolean}\n\t */\n\tfunction is_sandbox() {\n\t\treturn ! ! + woocommerce_bluesnap_gateway_general_params.is_sandbox;\n\t}\n\n})( jQuery );\n"],"file":"../../../../js/frontend/woocommerce-bluesnap-gateway.js"}