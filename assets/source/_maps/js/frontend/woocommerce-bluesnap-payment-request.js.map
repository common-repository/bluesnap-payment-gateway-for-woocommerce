{"version":3,"names":[],"mappings":"","sources":["frontend/woocommerce-bluesnap-payment-request.js"],"sourcesContent":["( function ( $ ) {\n\tvar wc_bluesnap_payment_request = {\n\t\ttype: null, //\n\t\tinitialized: false,\n\t\tsession: null,\n\t\tsource: woocommerce_bluesnap_payment_request_params.request_info_source,\n\t\tgooglePayParams: {\n\t\t\tbaseRequest: {\n\t\t\t\tapiVersion: 2,\n\t\t\t\tapiVersionMinor: 0,\n\t\t\t},\n\t\t\tallowedCardNetworks: [\n\t\t\t\t'AMEX',\n\t\t\t\t'DISCOVER',\n\t\t\t\t'INTERAC',\n\t\t\t\t'JCB',\n\t\t\t\t'MASTERCARD',\n\t\t\t\t'MIR',\n\t\t\t\t'VISA',\n\t\t\t],\n\t\t\tallowedCardAuthMethods: [ 'PAN_ONLY', 'CRYPTOGRAM_3DS' ],\n\t\t},\n\n\t\tinit: function () {\n\t\t\tif ( wc_bluesnap_payment_request.initialized ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\twc_bluesnap_payment_request.type = wc_bluesnap_payment_request.getSupportedPaymentRequestType();\n\n\t\t\tif ( ! wc_bluesnap_payment_request.type ) {\n\t\t\t\t// Device doesn't support any PaymentRequest method\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar cartOrCheckout = $(\n\t\t\t\t'form.woocommerce-cart-form, form.checkout, form#order_review'\n\t\t\t);\n\t\t\tif ( ! cartOrCheckout.length ) {\n\t\t\t\t// not in cart, pay order or checkout\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\twc_bluesnap_payment_request.initialized = true;\n\n\t\t\tif (\n\t\t\t\twc_bluesnap_payment_request.source == 'cart' &&\n\t\t\t\t0 == woocommerce_bluesnap_payment_request_params.cart_compatible\n\t\t\t) {\n\t\t\t\twc_bluesnap_payment_request.showError(\n\t\t\t\t\t'<div class=\"woocommerce-info\">' +\n\t\t\t\t\t\twc_bluesnap_payment_request.getErrorMessage(\n\t\t\t\t\t\t\t'not_compatible_with_cart'\n\t\t\t\t\t\t) +\n\t\t\t\t\t\t'</div>'\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\t! wc_bluesnap_payment_request.cartCompatibleWithCurrentType()\n\t\t\t) {\n\t\t\t\twc_bluesnap_payment_request.showError(\n\t\t\t\t\t'<div class=\"woocommerce-info\">' +\n\t\t\t\t\t\twc_bluesnap_payment_request.getErrorMessage(\n\t\t\t\t\t\t\t'device_not_compat_with_cart'\n\t\t\t\t\t\t) +\n\t\t\t\t\t\t'</div>'\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tswitch ( wc_bluesnap_payment_request.type ) {\n\t\t\t\tcase 'apple_pay':\n\t\t\t\t\twc_bluesnap_payment_request.createButton();\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'google_pay':\n\t\t\t\t\tif ( ! $( '#wc-bluesnap-google-pay-wrapper' ).length ) {\n\t\t\t\t\t\treturn; // No point going further.\n\t\t\t\t\t}\n\n\t\t\t\t\tif (\n\t\t\t\t\t\t$( '#wc-bluesnap-google-pay-wrapper.requires-account' )\n\t\t\t\t\t\t\t.length\n\t\t\t\t\t) {\n\t\t\t\t\t\t$(\n\t\t\t\t\t\t\t'#wc-bluesnap-google-pay-wrapper, #wc-bluesnap-google-pay-button-separator'\n\t\t\t\t\t\t).show();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\twc_bluesnap_payment_request.loadJS(\n\t\t\t\t\t\t'https://pay.google.com/gp/p/js/pay.js',\n\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\t\twc_bluesnap_payment_request.createButton();\n\n\t\t\t\t\t\t\t$( document.body ).on(\n\t\t\t\t\t\t\t\t'updated_cart_totals',\n\t\t\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\t\t\t\twc_bluesnap_payment_request.createButton();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\n\t\tloadJS: function ( src, callback ) {\n\t\t\tvar script = document.createElement( 'script' );\n\n\t\t\tscript.onload = function () {\n\t\t\t\tcallback();\n\t\t\t};\n\n\t\t\tscript.src = src;\n\t\t\tdocument.head.appendChild( script );\n\t\t},\n\n\t\tcreateButton: function () {\n\t\t\tswitch ( wc_bluesnap_payment_request.type ) {\n\t\t\t\tcase 'apple_pay':\n\t\t\t\t\tif ( ApplePaySession.canMakePayments() ) {\n\t\t\t\t\t\t$( '<style></style>' )\n\t\t\t\t\t\t\t.attr( 'id', 'wc-bluesnap-apple-pay-css' )\n\t\t\t\t\t\t\t.html(\n\t\t\t\t\t\t\t\t'#wc-bluesnap-apple-pay-wrapper, #wc-bluesnap-apple-pay-button-separator { display: block !important; }'\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.appendTo( 'body' );\n\n\t\t\t\t\t\t$( document ).on(\n\t\t\t\t\t\t\t'click',\n\t\t\t\t\t\t\t'#wc-bluesnap-apple-pay-wrapper a.apple-pay-button',\n\t\t\t\t\t\t\twc_bluesnap_payment_request.applePayClicked\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\twc_bluesnap_payment_request.showError(\n\t\t\t\t\t\t\t'<div class=\"woocommerce-info\">' +\n\t\t\t\t\t\t\t\twc_bluesnap_payment_request.getErrorMessage(\n\t\t\t\t\t\t\t\t\t'not_able_to_make_payments'\n\t\t\t\t\t\t\t\t) +\n\t\t\t\t\t\t\t\t'</div>'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'google_pay':\n\t\t\t\t\tconst paymentsClient = wc_bluesnap_payment_request.googlePayGetPaymentsClient();\n\n\t\t\t\t\tconst isReadyToPayRequest = Object.assign(\n\t\t\t\t\t\t{},\n\t\t\t\t\t\twc_bluesnap_payment_request.googlePayParams.baseRequest,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tallowedPaymentMethods: [\n\t\t\t\t\t\t\t\twc_bluesnap_payment_request.googlePayGetBaseCardPaymentMethod(),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t\tpaymentsClient\n\t\t\t\t\t\t.isReadyToPay( isReadyToPayRequest )\n\t\t\t\t\t\t.then( function ( response ) {\n\t\t\t\t\t\t\tif ( response.result ) {\n\t\t\t\t\t\t\t\t$(\n\t\t\t\t\t\t\t\t\t'#wc-bluesnap-google-pay-wrapper, #wc-bluesnap-google-pay-button-separator'\n\t\t\t\t\t\t\t\t).show();\n\n\t\t\t\t\t\t\t\twc_bluesnap_payment_request.googlePayCreateButton(\n\t\t\t\t\t\t\t\t\tpaymentsClient\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.catch( function ( err ) {\n\t\t\t\t\t\t\t// show error in developer console for debugging\n\t\t\t\t\t\t\tconsole.error( err );\n\t\t\t\t\t\t} );\n\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\n\t\tgooglePayGetCardPaymentMethod: function () {\n\t\t\tconst tokenizationSpecification = {\n\t\t\t\ttype: 'PAYMENT_GATEWAY',\n\t\t\t\tparameters: {\n\t\t\t\t\tgateway: 'bluesnap',\n\t\t\t\t\tgatewayMerchantId:\n\t\t\t\t\t\twoocommerce_bluesnap_payment_request_params.merchant_id,\n\t\t\t\t},\n\t\t\t};\n\n\t\t\treturn Object.assign(\n\t\t\t\t{},\n\t\t\t\twc_bluesnap_payment_request.googlePayGetBaseCardPaymentMethod(),\n\t\t\t\t{\n\t\t\t\t\ttokenizationSpecification: tokenizationSpecification,\n\t\t\t\t}\n\t\t\t);\n\t\t},\n\n\t\tgooglePayGetBaseCardPaymentMethod: function () {\n\t\t\treturn {\n\t\t\t\ttype: 'CARD',\n\t\t\t\tparameters: {\n\t\t\t\t\tallowedAuthMethods:\n\t\t\t\t\t\twc_bluesnap_payment_request.googlePayParams\n\t\t\t\t\t\t\t.allowedCardAuthMethods,\n\t\t\t\t\tallowedCardNetworks:\n\t\t\t\t\t\twc_bluesnap_payment_request.googlePayParams\n\t\t\t\t\t\t\t.allowedCardNetworks,\n\t\t\t\t},\n\t\t\t};\n\t\t},\n\n\t\tgooglePayInit: function ( paymentDataRequest ) {\n\t\t\tconst paymentsClientRequest = {\n\t\t\t\tenvironment: woocommerce_bluesnap_payment_request_params.test_mode\n\t\t\t\t\t? 'TEST'\n\t\t\t\t\t: 'PRODUCTION',\n\t\t\t\tmerchantInfo: {\n\t\t\t\t\tmerchantName:\n\t\t\t\t\t\twoocommerce_bluesnap_payment_request_params.merchant_soft_descriptor,\n\t\t\t\t\tmerchantId:\n\t\t\t\t\t\twoocommerce_bluesnap_payment_request_params.google_pay_merchant_id,\n\t\t\t\t},\n\t\t\t\tpaymentDataCallbacks: {\n\t\t\t\t\tonPaymentAuthorized:\n\t\t\t\t\t\twc_bluesnap_payment_request.googlePayPaymentAuthorized,\n\t\t\t\t},\n\t\t\t};\n\n\t\t\tif (\n\t\t\t\t'undefined' !== typeof paymentDataRequest &&\n\t\t\t\tpaymentDataRequest.shippingAddressRequired\n\t\t\t) {\n\t\t\t\tObject.assign( paymentsClientRequest.paymentDataCallbacks, {\n\t\t\t\t\tonPaymentDataChanged:\n\t\t\t\t\t\twc_bluesnap_payment_request.googlePayOnPaymentDataChanged,\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\treturn new google.payments.api.PaymentsClient(\n\t\t\t\tpaymentsClientRequest\n\t\t\t);\n\t\t},\n\n\t\t/**\n\t\t * Handles dynamic buy flow shipping address and shipping options callback intents.\n\t\t *\n\t\t * @param {object} itermediatePaymentData response from Google Pay API a shipping address or shipping option is selected in the payment sheet.\n\t\t * @see {@link https://developers.google.com/pay/api/web/reference/response-objects#IntermediatePaymentData|IntermediatePaymentData object reference}\n\t\t *\n\t\t * @see {@link https://developers.google.com/pay/api/web/reference/response-objects#PaymentDataRequestUpdate|PaymentDataRequestUpdate}\n\t\t * @returns Promise<{object}> Promise of PaymentDataRequestUpdate object to update the payment sheet.\n\t\t */\n\t\tgooglePayOnPaymentDataChanged: function ( intermediatePaymentData ) {\n\t\t\treturn new Promise( function ( resolve, reject ) {\n\t\t\t\tlet shippingAddress = intermediatePaymentData.shippingAddress;\n\t\t\t\tlet shippingOptionData =\n\t\t\t\t\tintermediatePaymentData.shippingOptionData;\n\t\t\t\tlet paymentDataRequestUpdate = {};\n\t\t\t\tlet selectedShippingOptionId = null;\n\n\t\t\t\tif (\n\t\t\t\t\t'SHIPPING_OPTION' ===\n\t\t\t\t\tintermediatePaymentData.callbackTrigger\n\t\t\t\t) {\n\t\t\t\t\tselectedShippingOptionId = shippingOptionData.id;\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tpaymentDataRequestUpdate.newTransactionInfo = wc_bluesnap_payment_request.googlePayCalculateNewTransactionInfo(\n\t\t\t\t\t\tshippingAddress,\n\t\t\t\t\t\tselectedShippingOptionId\n\t\t\t\t\t);\n\n\t\t\t\t\tpaymentDataRequestUpdate.newShippingOptionParameters = wc_bluesnap_payment_request.transformShippingForGpay(\n\t\t\t\t\t\tpaymentDataRequestUpdate.newTransactionInfo\n\t\t\t\t\t\t\t.shippingMethods\n\t\t\t\t\t);\n\n\t\t\t\t\tdelete paymentDataRequestUpdate\n\t\t\t\t\t\t.newTransactionInfo.shippingMethods; // This is already in newShippingOptionParameters and leaving it here throws an error.\n\n\t\t\t\t\tresolve( paymentDataRequestUpdate );\n\t\t\t\t} catch ( error ) {\n\t\t\t\t\tif ( 'object' !== typeof error || ! error.intent ) {\n\t\t\t\t\t\terror = {\n\t\t\t\t\t\t\treason: 'OTHER_ERROR',\n\t\t\t\t\t\t\tmessage:\n\t\t\t\t\t\t\t\t'Could not get shipping information from the server',\n\t\t\t\t\t\t\tintent: 'SHIPPING_ADDRESS',\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\t// GooglePay expects a sligtly different error code in this case.\n\t\t\t\t\terror.reason =\n\t\t\t\t\t\terror.reason &&\n\t\t\t\t\t\terror.reason === 'invalid_shipping_address'\n\t\t\t\t\t\t\t? 'SHIPPING_ADDRESS_INVALID'\n\t\t\t\t\t\t\t: error.reason;\n\n\t\t\t\t\treject( error );\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\n\t\ttransformShippingForGpay: function ( shippingMethods ) {\n\t\t\tif ( ! shippingMethods || 0 === shippingMethods.length ) {\n\t\t\t\treturn {};\n\t\t\t}\n\n\t\t\tshippingOptions = [];\n\n\t\t\tshippingMethods.forEach( ( shippingMethod ) => {\n\t\t\t\tshippingOptions.push( {\n\t\t\t\t\tid: shippingMethod.identifier,\n\t\t\t\t\tlabel:\n\t\t\t\t\t\tshippingMethod.label +\n\t\t\t\t\t\t'(' +\n\t\t\t\t\t\tshippingMethod.amount +\n\t\t\t\t\t\t')',\n\t\t\t\t\tdescription: shippingMethod.detail,\n\t\t\t\t} );\n\t\t\t} );\n\n\t\t\treturn {\n\t\t\t\tdefaultSelectedOptionId: shippingOptions[ 0 ].id,\n\t\t\t\tshippingOptions: shippingOptions,\n\t\t\t};\n\t\t},\n\n\t\tgooglePayCalculateNewTransactionInfo: function (\n\t\t\tshippingAddress,\n\t\t\tshippingOptionId\n\t\t) {\n\t\t\tif ( null !== shippingOptionId ) {\n\t\t\t\twc_bluesnap_payment_request.updateShippingMethod( {\n\t\t\t\t\tidentifier: shippingOptionId,\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\treturn wc_bluesnap_payment_request.getShippingOptions(\n\t\t\t\tshippingAddress\n\t\t\t);\n\t\t},\n\n\t\tgooglePayGetPaymentsClient: function ( paymentDataRequest ) {\n\t\t\t/**\n\t\t\t * The output of this method is intentionally not cached\n\t\t\t * as paymentDataCallbacks may need to change depending on\n\t\t\t * the current cart's content (requires shipping or not, etc).\n\t\t\t */\n\t\t\treturn wc_bluesnap_payment_request.googlePayInit(\n\t\t\t\tpaymentDataRequest\n\t\t\t);\n\t\t},\n\n\t\tgooglePayCreateButton: function ( paymentsClient ) {\n\t\t\tconst button = paymentsClient.createButton( {\n\t\t\t\tonClick: wc_bluesnap_payment_request.googlePayClicked,\n\t\t\t} );\n\n\t\t\tdocument\n\t\t\t\t.getElementById( 'wc-bluesnap-google-pay-button-cont' )\n\t\t\t\t.appendChild( button );\n\t\t},\n\n\t\tgetSupportedPaymentRequestType: function () {\n\t\t\tif (\n\t\t\t\t'undefined' !== typeof window.ApplePaySession &&\n\t\t\t\twoocommerce_bluesnap_payment_request_params.apple_pay_enabled\n\t\t\t) {\n\t\t\t\treturn 'apple_pay';\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\t'undefined' !== typeof window.PaymentRequest &&\n\t\t\t\twoocommerce_bluesnap_payment_request_params.google_pay_enabled\n\t\t\t) {\n\t\t\t\t/**\n\t\t\t\t * Note that:\n\t\t\t\t * PaymentRequest is not GooglePay, but its unlikely that a browser that supports GooglePay doesn't support PaymentRequest.\n\t\t\t\t * Any edge case where a browser does support PaymentRequest but doesn't support GooglePay will be handled by\n\t\t\t\t * paymentsClient.isReadyToPay().\n\t\t\t\t */\n\t\t\t\treturn 'google_pay';\n\t\t\t}\n\n\t\t\treturn false;\n\t\t},\n\n\t\tcartCompatibleWithCurrentType: function () {\n\t\t\tswitch ( wc_bluesnap_payment_request.type ) {\n\t\t\t\tcase 'apple_pay':\n\t\t\t\t\treturn (\n\t\t\t\t\t\twindow.ApplePaySession !== undefined &&\n\t\t\t\t\t\tApplePaySession.supportsVersion(\n\t\t\t\t\t\t\tparseInt(\n\t\t\t\t\t\t\t\twoocommerce_bluesnap_payment_request_params\n\t\t\t\t\t\t\t\t\t.version_required[\n\t\t\t\t\t\t\t\t\twc_bluesnap_payment_request.type\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\tcase 'google_pay':\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\n\t\tgooglePayClicked: function ( e ) {\n\t\t\te.preventDefault();\n\n\t\t\tconst paymentDataRequest = wc_bluesnap_payment_request.googlePayGetPaymentDataRequest();\n\t\t\tconst paymentsClient = wc_bluesnap_payment_request.googlePayGetPaymentsClient(\n\t\t\t\tpaymentDataRequest\n\t\t\t);\n\t\t\tpaymentsClient.loadPaymentData( paymentDataRequest ).catch( function ( err ) {\n\t\t\t\t// Catch exiting payment sheet without proceeding.\n\t\t\t});\n\t\t},\n\n\t\tgooglePayGetPaymentDataRequest: function () {\n\t\t\tvar request = wc_bluesnap_payment_request.getRequestData();\n\n\t\t\tlet paymentDataRequest = Object.assign(\n\t\t\t\t{},\n\t\t\t\twc_bluesnap_payment_request.googlePayParams.baseRequest\n\t\t\t);\n\n\t\t\tconst cardPaymentMethod = wc_bluesnap_payment_request.googlePayGetCardPaymentMethod();\n\n\t\t\tcardPaymentMethod.parameters = Object.assign(\n\t\t\t\tcardPaymentMethod.parameters,\n\t\t\t\trequest.billingAddressInfo\n\t\t\t);\n\n\t\t\tpaymentDataRequest.allowedPaymentMethods = [ cardPaymentMethod ];\n\t\t\tpaymentDataRequest.transactionInfo = request.transactionInfo;\n\t\t\tpaymentDataRequest.merchantInfo = {\n\t\t\t\tmerchantId:\n\t\t\t\t\twoocommerce_bluesnap_payment_request_params.google_pay_merchant_id,\n\t\t\t\tmerchantName:\n\t\t\t\t\twoocommerce_bluesnap_payment_request_params.merchant_soft_descriptor,\n\t\t\t};\n\n\t\t\tpaymentDataRequest = Object.assign(\n\t\t\t\tpaymentDataRequest,\n\t\t\t\trequest.shippingAddressInfo\n\t\t\t);\n\n\t\t\tpaymentDataRequest.callbackIntents = [ 'PAYMENT_AUTHORIZATION' ];\n\n\t\t\tpaymentDataRequest.shippingOptionRequired =\n\t\t\t\tpaymentDataRequest.shippingAddressRequired;\n\n\t\t\tif ( paymentDataRequest.shippingOptionRequired ) {\n\t\t\t\tpaymentDataRequest.callbackIntents = paymentDataRequest.callbackIntents.concat(\n\t\t\t\t\t[ 'SHIPPING_ADDRESS', 'SHIPPING_OPTION' ]\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tpaymentDataRequest.emailRequired = true;\n\n\t\t\treturn paymentDataRequest;\n\t\t},\n\n\t\tapplePayClicked: function ( e ) {\n\t\t\te.preventDefault();\n\n\t\t\tif ( wc_bluesnap_payment_request.session !== null ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\twc_bluesnap_payment_request.blockForm();\n\n\t\t\tvar request = wc_bluesnap_payment_request.getRequestData();\n\n\t\t\tif ( false !== request ) {\n\t\t\t\ttry {\n\t\t\t\t\tvar apple_session = ( wc_bluesnap_payment_request.session = new ApplePaySession(\n\t\t\t\t\t\twoocommerce_bluesnap_payment_request_params.version_required[\n\t\t\t\t\t\t\twc_bluesnap_payment_request.type\n\t\t\t\t\t\t],\n\t\t\t\t\t\trequest\n\t\t\t\t\t) );\n\t\t\t\t} catch ( error ) {\n\t\t\t\t\twc_bluesnap_payment_request.showError(\n\t\t\t\t\t\t'<div class=\"woocommerce-error\">' +\n\t\t\t\t\t\t\twc_bluesnap_payment_request.getErrorMessage(\n\t\t\t\t\t\t\t\t'device_not_compat_with_cart'\n\t\t\t\t\t\t\t) +\n\t\t\t\t\t\t\t'</div>'\n\t\t\t\t\t);\n\t\t\t\t\t$( '#wc-bluesnap-apple-pay-css' ).html(\n\t\t\t\t\t\t'#wc-bluesnap-apple-pay-wrapper, #wc-bluesnap-apple-pay-button-separator { display: none !important; }'\n\t\t\t\t\t);\n\t\t\t\t\twc_bluesnap_payment_request.unblockForm();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tapple_session.onvalidatemerchant =\n\t\t\t\t\twc_bluesnap_payment_request.applePayValidateMerchant;\n\n\t\t\t\tapple_session.onshippingcontactselected =\n\t\t\t\t\twc_bluesnap_payment_request.applePayUpdateShippingInfo;\n\n\t\t\t\tapple_session.onshippingmethodselected =\n\t\t\t\t\twc_bluesnap_payment_request.applePayUpdateShippingMethod;\n\n\t\t\t\tapple_session.onpaymentauthorized =\n\t\t\t\t\twc_bluesnap_payment_request.applePayPaymentAuthorized;\n\n\t\t\t\tapple_session.oncancel =\n\t\t\t\t\twc_bluesnap_payment_request.handleCancel;\n\n\t\t\t\tapple_session.begin();\n\t\t\t} else {\n\t\t\t\twc_bluesnap_payment_request.unblockForm();\n\t\t\t\talert(\n\t\t\t\t\t'Apple Pay could not be initialized. Try an alternate form of payment'\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\n\t\tapplePayValidateMerchant: function ( event ) {\n\t\t\t$.ajax( {\n\t\t\t\turl: wc_bluesnap_payment_request.getAjaxUrl(\n\t\t\t\t\t'create_apple_wallet'\n\t\t\t\t),\n\t\t\t\tmethod: 'POST',\n\t\t\t\tdataType: 'json',\n\t\t\t\tdata: {\n\t\t\t\t\tsecurity:\n\t\t\t\t\t\twoocommerce_bluesnap_payment_request_params.nonces\n\t\t\t\t\t\t\t.create_apple_wallet,\n\t\t\t\t\tvalidation_url: event.validationURL,\n\t\t\t\t\tpayment_request_type: wc_bluesnap_payment_request.type,\n\t\t\t\t\tpayment_request_source: wc_bluesnap_payment_request.source,\n\t\t\t\t},\n\t\t\t} ).then( function ( res ) {\n\t\t\t\tif ( ! res.success ) {\n\t\t\t\t\twc_bluesnap_payment_request.handleError( res );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar decoded_token = window.atob( res.data.walletToken );\n\t\t\t\twc_bluesnap_payment_request.session.completeMerchantValidation(\n\t\t\t\t\tJSON.parse( decoded_token )\n\t\t\t\t);\n\t\t\t}, wc_bluesnap_payment_request.handleError );\n\t\t},\n\n\t\tgetShippingOptions: function ( address, callback ) {\n\t\t\tvar ret = false;\n\n\t\t\t$.ajax( {\n\t\t\t\turl: wc_bluesnap_payment_request.getAjaxUrl(\n\t\t\t\t\t'get_shipping_options'\n\t\t\t\t),\n\t\t\t\tmethod: 'POST',\n\t\t\t\tdataType: 'json',\n\t\t\t\tasync: 'apple_pay' === wc_bluesnap_payment_request.type,\n\t\t\t\tdata: {\n\t\t\t\t\tsecurity:\n\t\t\t\t\t\twoocommerce_bluesnap_payment_request_params.nonces\n\t\t\t\t\t\t\t.get_shipping_options,\n\t\t\t\t\taddress: window.btoa( unescape( encodeURIComponent( ( JSON.stringify( address ) ) ) ) ),\n\t\t\t\t\tpayment_request_type: wc_bluesnap_payment_request.type,\n\t\t\t\t\tpayment_request_source: wc_bluesnap_payment_request.source,\n\t\t\t\t},\n\t\t\t} )\n\t\t\t\t.done(\n\t\t\t\t\tcallback ||\n\t\t\t\t\t\tfunction ( res ) {\n\t\t\t\t\t\t\tif ( res.success ) {\n\t\t\t\t\t\t\t\tret = res.data;\n\t\t\t\t\t\t\t} else if ( res.data && res.data.errorCode ) {\n\t\t\t\t\t\t\t\tthrow {\n\t\t\t\t\t\t\t\t\treason: res.data.errorCode,\n\t\t\t\t\t\t\t\t\tmessage: res.data.message || '',\n\t\t\t\t\t\t\t\t\tintent: 'SHIPPING_ADDRESS',\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t\t.fail( wc_bluesnap_payment_request.handleError );\n\n\t\t\treturn ret;\n\t\t},\n\n\t\tapplePayUpdateShippingInfo: function ( event ) {\n\t\t\tvar address = event.shippingContact;\n\n\t\t\twc_bluesnap_payment_request.getShippingOptions(\n\t\t\t\taddress,\n\t\t\t\tfunction ( res ) {\n\t\t\t\t\tvar data = res.data;\n\t\t\t\t\tif ( ! res.success ) {\n\t\t\t\t\t\tvar err = new ApplePayError(\n\t\t\t\t\t\t\t'shippingContactInvalid',\n\t\t\t\t\t\t\t'postalAddress',\n\t\t\t\t\t\t\tdata.message\n\t\t\t\t\t\t);\n\t\t\t\t\t\twc_bluesnap_payment_request.session.completeShippingContactSelection(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tstatus: ApplePaySession.STATUS_FAILURE,\n\t\t\t\t\t\t\t\terrors: [ err ],\n\t\t\t\t\t\t\t\tnewShippingMethods: [],\n\t\t\t\t\t\t\t\tnewLineItems: data.lineItems,\n\t\t\t\t\t\t\t\tnewTotal: data.total,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\twc_bluesnap_payment_request.session.completeShippingContactSelection(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstatus: ApplePaySession.STATUS_SUCCESS,\n\t\t\t\t\t\t\tnewShippingMethods: data.shippingMethods,\n\t\t\t\t\t\t\tnewLineItems: data.lineItems,\n\t\t\t\t\t\t\tnewTotal: data.total,\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t);\n\t\t},\n\n\t\tapplePayUpdateShippingMethod: function ( event ) {\n\t\t\tvar method = event.shippingMethod;\n\n\t\t\twc_bluesnap_payment_request.updateShippingMethod(\n\t\t\t\tmethod,\n\t\t\t\tfunction ( res ) {\n\t\t\t\t\tvar data = res.data;\n\t\t\t\t\tif ( ! res.success ) {\n\t\t\t\t\t\twc_bluesnap_payment_request.session.completeShippingMethodSelection(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tstatus: ApplePaySession.STATUS_FAILURE,\n\t\t\t\t\t\t\t\tnewLineItems: data.lineItems,\n\t\t\t\t\t\t\t\tnewTotal: data.total,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\twc_bluesnap_payment_request.session.completeShippingMethodSelection(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstatus: ApplePaySession.STATUS_SUCCESS,\n\t\t\t\t\t\t\tnewLineItems: data.lineItems,\n\t\t\t\t\t\t\tnewTotal: data.total,\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t);\n\t\t},\n\n\t\tupdateShippingMethod: function ( method, callback ) {\n\t\t\t$.ajax( {\n\t\t\t\turl: wc_bluesnap_payment_request.getAjaxUrl(\n\t\t\t\t\t'update_shipping_method'\n\t\t\t\t),\n\t\t\t\tmethod: 'POST',\n\t\t\t\tdataType: 'json',\n\t\t\t\tasync: 'apple_pay' === wc_bluesnap_payment_request.type,\n\t\t\t\tdata: {\n\t\t\t\t\tsecurity:\n\t\t\t\t\t\twoocommerce_bluesnap_payment_request_params.nonces\n\t\t\t\t\t\t\t.update_shipping_method,\n\t\t\t\t\tmethod: [ method.identifier ],\n\t\t\t\t\tpayment_request_type: wc_bluesnap_payment_request.type,\n\t\t\t\t\tpayment_request_source: wc_bluesnap_payment_request.source,\n\t\t\t\t},\n\t\t\t} )\n\t\t\t\t.done( callback )\n\t\t\t\t.fail( wc_bluesnap_payment_request.handleError );\n\t\t},\n\n\t\tgooglePayPaymentAuthorized: function ( data ) {\n\t\t\treturn new Promise( function ( resolve, reject ) {\n\t\t\t\twc_bluesnap_payment_request.paymentRequestPaymentAuthorized(\n\t\t\t\t\t{\n\t\t\t\t\t\tpayment: data,\n\t\t\t\t\t},\n\t\t\t\t\tfunction ( res ) {\n\t\t\t\t\t\tres.resolveFn = resolve;\n\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\ttypeof res.success !== 'undefined' &&\n\t\t\t\t\t\t\t\tfalse === res.success\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\twc_bluesnap_payment_request.handleError( res );\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ( typeof res.result !== 'undefined' ) {\n\t\t\t\t\t\t\t\twc_bluesnap_payment_request.handleWCResponse(\n\t\t\t\t\t\t\t\t\tres\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch ( error ) {\n\t\t\t\t\t\t\tdoReject( error );\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tfunction ( res ) {\n\t\t\t\t\t\tres.resolveFn = resolve;\n\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\twc_bluesnap_payment_request.handleError( res );\n\t\t\t\t\t\t} catch ( error ) {\n\t\t\t\t\t\t\tdoReject( error );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\tfunction doReject( error ) {\n\t\t\t\t\tlet errorMessage;\n\n\t\t\t\t\terrorMessage =\n\t\t\t\t\t\terror && error.data && 'string' === typeof error.data\n\t\t\t\t\t\t\t? error.data\n\t\t\t\t\t\t\t: wc_bluesnap_payment_request.getErrorMessage(\n\t\t\t\t\t\t\t\t\t'checkout_error'\n\t\t\t\t\t\t\t  );\n\n\t\t\t\t\treject( {\n\t\t\t\t\t\tintent: 'PAYMENT_AUTHORIZATION',\n\t\t\t\t\t\tmessage: errorMessage,\n\t\t\t\t\t\treason: 'PAYMENT_DATA_INVALID',\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\n\t\tapplePayPaymentAuthorized: function ( data ) {\n\t\t\twc_bluesnap_payment_request.paymentRequestPaymentAuthorized(\n\t\t\t\tdata,\n\t\t\t\tfunction ( res ) {\n\t\t\t\t\tif (\n\t\t\t\t\t\ttypeof res.success !== 'undefined' &&\n\t\t\t\t\t\tfalse === res.success\n\t\t\t\t\t) {\n\t\t\t\t\t\twc_bluesnap_payment_request.handleError( res );\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif ( typeof res.result !== 'undefined' ) {\n\t\t\t\t\t\twc_bluesnap_payment_request.handleWCResponse( res );\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\twc_bluesnap_payment_request.handleError\n\t\t\t);\n\t\t},\n\n\t\tpaymentRequestPaymentAuthorized: function (\n\t\t\tevent,\n\t\t\tonSuccess,\n\t\t\tonError\n\t\t) {\n\t\t\tvar paymentToken = event.payment;\n\n\t\t\t$.ajax( {\n\t\t\t\turl: wc_bluesnap_payment_request.getAjaxUrl(\n\t\t\t\t\t'create_pmr_payment'\n\t\t\t\t),\n\t\t\t\tmethod: 'POST',\n\t\t\t\tdataType: 'json',\n\t\t\t\tdata: {\n\t\t\t\t\t_wpnonce:\n\t\t\t\t\t\twoocommerce_bluesnap_payment_request_params.nonces\n\t\t\t\t\t\t\t.checkout,\n\t\t\t\t\tpayment_token: btoa(\n\t\t\t\t\t\tencodeURIComponent(\n\t\t\t\t\t\t\tJSON.stringify( paymentToken )\n\t\t\t\t\t\t).replace(\n\t\t\t\t\t\t\t/%([0-9A-F]{2})/g,\n\t\t\t\t\t\t\tfunction toSolidBytes( match, p1 ) {\n\t\t\t\t\t\t\t\treturn String.fromCharCode( '0x' + p1 );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)\n\t\t\t\t\t),\n\t\t\t\t\tpayment_request_type: wc_bluesnap_payment_request.type,\n\t\t\t\t\tpayment_request_source: wc_bluesnap_payment_request.source,\n\t\t\t\t\tis_change_payment_method: woocommerce_bluesnap_payment_request_params.change_payment_page,\n\t\t\t\t},\n\t\t\t} ).then( onSuccess, onError );\n\t\t},\n\n\t\tgetAjaxUrl: function ( method ) {\n\t\t\treturn woocommerce_bluesnap_payment_request_params.wc_ajax_url\n\t\t\t\t.toString()\n\t\t\t\t.replace( '%%endpoint%%', 'bluesnap_' + method );\n\t\t},\n\n\t\tgetRequestData: function () {\n\t\t\tvar ret = false;\n\t\t\t$.ajax( {\n\t\t\t\turl: wc_bluesnap_payment_request.getAjaxUrl(\n\t\t\t\t\t'get_payment_request'\n\t\t\t\t),\n\t\t\t\tmethod: 'POST',\n\t\t\t\tdataType: 'json',\n\t\t\t\tdata: {\n\t\t\t\t\tsecurity:\n\t\t\t\t\t\twoocommerce_bluesnap_payment_request_params.nonces\n\t\t\t\t\t\t\t.get_payment_request,\n\t\t\t\t\tpayment_request_type: wc_bluesnap_payment_request.type,\n\t\t\t\t\tpayment_request_source: wc_bluesnap_payment_request.source,\n\t\t\t\t\tis_change_payment_method:\n\t\t\t\t\t\twoocommerce_bluesnap_payment_request_params.change_payment_page,\n\t\t\t\t},\n\t\t\t\tasync: false,\n\t\t\t} )\n\t\t\t\t.done( function ( res ) {\n\t\t\t\t\tif ( res.success ) {\n\t\t\t\t\t\tret = res.data;\n\t\t\t\t\t}\n\t\t\t\t} )\n\t\t\t\t.fail( function () {} );\n\n\t\t\treturn ret;\n\t\t},\n\n\t\thandleError: function ( error ) {\n\t\t\tswitch ( wc_bluesnap_payment_request.type ) {\n\t\t\t\tcase 'apple_pay':\n\t\t\t\t\twc_bluesnap_payment_request.session.completePayment(\n\t\t\t\t\t\tApplePaySession.STATUS_FAILURE\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'google_pay':\n\t\t\t\t\tthrow error;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\twc_bluesnap_payment_request.session = null;\n\t\t\twc_bluesnap_payment_request.unblockForm();\n\t\t\t$( document.body ).trigger( 'update_checkout' );\n\t\t},\n\n\t\thandleSuccess: function ( result ) {\n\t\t\tswitch ( wc_bluesnap_payment_request.type ) {\n\t\t\t\tcase 'apple_pay':\n\t\t\t\t\twc_bluesnap_payment_request.session.completePayment(\n\t\t\t\t\t\tApplePaySession.STATUS_SUCCESS\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'google_pay':\n\t\t\t\t\tif ( result && 'function' === typeof result.resolveFn ) {\n\t\t\t\t\t\tresult.resolveFn( {\n\t\t\t\t\t\t\ttransactionState: 'SUCCESS',\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\twc_bluesnap_payment_request.session = null;\n\t\t},\n\n\t\thandleCancel: function () {\n\t\t\tswitch ( wc_bluesnap_payment_request.type ) {\n\t\t\t\tcase 'apple_pay':\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\twc_bluesnap_payment_request.session = null;\n\t\t\twc_bluesnap_payment_request.unblockForm();\n\t\t\t$( document.body ).trigger( 'update_checkout' );\n\t\t},\n\n\t\thandleWCResponse: function ( result ) {\n\t\t\ttry {\n\t\t\t\tif ( 'success' === result.result ) {\n\t\t\t\t\twc_bluesnap_payment_request.handleSuccess( result );\n\n\t\t\t\t\tif (\n\t\t\t\t\t\t-1 === result.redirect.indexOf( 'https://' ) ||\n\t\t\t\t\t\t-1 === result.redirect.indexOf( 'http://' )\n\t\t\t\t\t) {\n\t\t\t\t\t\twindow.location = result.redirect;\n\t\t\t\t\t} else {\n\t\t\t\t\t\twindow.location = decodeURI( result.redirect );\n\t\t\t\t\t}\n\t\t\t\t} else if ( 'failure' === result.result ) {\n\t\t\t\t\tthrow 'Result failure';\n\t\t\t\t} else {\n\t\t\t\t\tthrow 'Invalid response';\n\t\t\t\t}\n\t\t\t} catch ( err ) {\n\t\t\t\t// Reload page\n\t\t\t\tif ( true === result.reload ) {\n\t\t\t\t\twindow.location.reload();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Trigger update in case we need a fresh nonce\n\t\t\t\tif ( true === result.refresh ) {\n\t\t\t\t\t$( document.body ).trigger( 'update_checkout' );\n\t\t\t\t}\n\n\t\t\t\t// Add new errors\n\t\t\t\tif ( result.messages ) {\n\t\t\t\t\twc_bluesnap_payment_request.showError( result.messages );\n\t\t\t\t} else {\n\t\t\t\t\twc_bluesnap_payment_request.showError(\n\t\t\t\t\t\t'<div class=\"woocommerce-error\">' +\n\t\t\t\t\t\t\twc_bluesnap_payment_request.getErrorMessage(\n\t\t\t\t\t\t\t\t'checkout_error'\n\t\t\t\t\t\t\t) +\n\t\t\t\t\t\t\t'</div>'\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif ( ! 'google_pay' === wc_bluesnap_payment_request.type ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( result && 'function' === typeof result.resolveFn ) {\n\t\t\t\t\tlet errorMessage = result.messages\n\t\t\t\t\t\t? parseWCErrors( result.messages )\n\t\t\t\t\t\t: err;\n\n\t\t\t\t\tresult.resolveFn( {\n\t\t\t\t\t\ttransactionState: 'ERROR',\n\t\t\t\t\t\terror: {\n\t\t\t\t\t\t\tintent: 'PAYMENT_AUTHORIZATION',\n\t\t\t\t\t\t\tmessage: errorMessage,\n\t\t\t\t\t\t\treason: 'PAYMENT_DATA_INVALID',\n\t\t\t\t\t\t},\n\t\t\t\t\t} );\n\t\t\t\t} else {\n\t\t\t\t\tthrow err;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction parseWCErrors( html ) {\n\t\t\t\tvar div = document.createElement( 'div' );\n\t\t\t\tdiv.innerHTML = html;\n\t\t\t\tvar text = div.textContent || div.innerText || '';\n\n\t\t\t\treturn text.trim();\n\t\t\t}\n\t\t},\n\n\t\tgetForm: function () {\n\t\t\tvar form = $( 'form.woocommerce-checkout' );\n\t\t\tif ( ! form.length ) {\n\t\t\t\tform = $( 'form#add_payment_method' );\n\t\t\t}\n\t\t\tif ( ! form.length ) {\n\t\t\t\tform = $( 'form#order_review' );\n\t\t\t}\n\t\t\tif ( ! form.length ) {\n\t\t\t\tform = $( 'form.woocommerce-cart-form' );\n\t\t\t\tif ( form.length ) {\n\t\t\t\t\tform = form.closest( '.woocommerce' );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn form;\n\t\t},\n\n\t\tblockForm: function () {\n\t\t\twc_bluesnap_payment_request\n\t\t\t\t.getForm()\n\t\t\t\t.addClass( 'processing' )\n\t\t\t\t.block( {\n\t\t\t\t\tmessage: null,\n\t\t\t\t\toverlayCSS: {\n\t\t\t\t\t\tbackground: '#fff',\n\t\t\t\t\t\topacity: 0.6,\n\t\t\t\t\t},\n\t\t\t\t} );\n\t\t},\n\n\t\tunblockForm: function () {\n\t\t\twc_bluesnap_payment_request\n\t\t\t\t.getForm()\n\t\t\t\t.removeClass( 'processing' )\n\t\t\t\t.unblock();\n\t\t},\n\n\t\tshowError: function ( error_message ) {\n\t\t\tvar form = wc_bluesnap_payment_request.getForm();\n\t\t\tif ( ! form.length ) {\n\t\t\t\tconsole.error( error_message );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t$(\n\t\t\t\t'.woocommerce-NoticeGroup-checkout, .woocommerce-error, .woocommerce-message'\n\t\t\t).remove();\n\t\t\tform.prepend(\n\t\t\t\t'<div class=\"woocommerce-NoticeGroup woocommerce-NoticeGroup-checkout\">' +\n\t\t\t\t\terror_message +\n\t\t\t\t\t'</div>'\n\t\t\t);\n\t\t\twc_bluesnap_payment_request.unblockForm();\n\n\t\t\tvar scroll_element = $(\n\t\t\t\t'.woocommerce-NoticeGroup-updateOrderReview, .woocommerce-NoticeGroup-checkout'\n\t\t\t);\n\t\t\tif ( ! scroll_element.length ) {\n\t\t\t\tscroll_element = $( form );\n\t\t\t}\n\t\t\t$.scroll_to_notices( scroll_element );\n\n\t\t\t$( document.body ).trigger( 'checkout_error' );\n\t\t},\n\n\t\tgetErrorMessage: function ( errorCode ) {\n\t\t\tlet errorMessage =\n\t\t\t\t( woocommerce_bluesnap_payment_request_params.i18n[\n\t\t\t\t\twc_bluesnap_payment_request.type\n\t\t\t\t]\n\t\t\t\t\t? woocommerce_bluesnap_payment_request_params.i18n[\n\t\t\t\t\t\t\twc_bluesnap_payment_request.type\n\t\t\t\t\t  ][ errorCode ]\n\t\t\t\t\t: false ) ||\n\t\t\t\twoocommerce_bluesnap_payment_request_params.i18n[ errorCode ] ||\n\t\t\t\tnull;\n\n\t\t\tif ( ! errorMessage ) {\n\t\t\t\terrorMessage =\n\t\t\t\t\t'An unknown error prevented the payment method from loading (' +\n\t\t\t\t\twc_bluesnap_payment_request.type +\n\t\t\t\t\t':' +\n\t\t\t\t\terrorCode +\n\t\t\t\t\t')';\n\t\t\t}\n\n\t\t\treturn errorMessage;\n\t\t},\n\t};\n\n\t// On Checkout form.\n\t$( document.body ).on( 'updated_checkout', function () {\n\t\twc_bluesnap_payment_request.init();\n\t} );\n\n\t$( wc_bluesnap_payment_request.init ); // on ready\n} )( jQuery );\n"],"file":"../../../../js/frontend/woocommerce-bluesnap-payment-request.js"}